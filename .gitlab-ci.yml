workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: never  # Prevent pipeline run for push event
    - when: always # Run pipeline for all other cases

stages:
  - test
  - package
  - e2e-test
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2376
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"

services:
  - docker:20.10.8-dind

cache:
  key: tafel-admin
  paths:
    - frontend/node_modules
    - .m2/repository

test-backend:
  stage: test
  image: openjdk:11-jdk-slim
  script:
    - ./mvnw test -f backend/pom.xml

test-frontend:
  stage: test
  image: node:14.17.6-buster-slim
  script:
    - npm install --prefix frontend
    #- npm run test --prefix frontend
    - echo "TODO headless run"

pkg-backend:
  stage: package
  needs:
    - test-backend
  image: openjdk:11-jdk-slim
  script:
    - ./mvnw clean install -DskipTests -f backend/pom.xml
    # - TODO build docker image

pkg-frontend-test:
  stage: package
  needs:
    - test-frontend
  image: node:14.17.6-buster-slim
  script:
    - npm install --prefix frontend
    - npm run build-test --prefix frontend
    # - TODO build docker image

pkg-frontend-e2e-test:
  stage: package
  needs:
    - test-frontend
  image: node:14.17.6-buster-slim
  script:
    - npm install --prefix frontend
    - npm run build-e2e-test --prefix frontend
    # - TODO build docker image

pkg-frontend-prod:
  stage: package
  needs:
    - test-frontend
  image: node:14.17.6-buster-slim
  script:
    - npm install --prefix frontend
    - npm run build-prod --prefix frontend
    # - TODO build docker image

e2e-test:
  stage: e2e-test
  needs:
    - pkg-backend
    - pkg-frontend-e2e-test
  image: node:14.17.6-buster-slim
  script:
    - npm install --prefix frontend
    #- npm run e2e --prefix frontend
    - echo "TODO headless run"

deploy-test:
  stage: deploy
  #  needs:
  #    - pkg-backend
  #    - pkg-frontend-test
  cache: { }
  environment:
    name: test
    url: "https://adminneu-test.tafel1030.at"
  script:
    - echo "deploy"
  when: manual

deploy-production:
  stage: deploy
  #  needs:
  #    - pkg-backend
  #    - pkg-frontend-prod
  cache: { }
  environment:
    name: prod
    url: "https://adminneu.tafel1030.at"
  script:
    - echo "deploy"
  when: manual
