name: Release

on:
  push:
    branches: [ 'main' ] # switch to release?!

env:
  JAVA_VERSION: '17'
  JAVA_DISTRIBUTION: 'adopt'
  REGISTRY: ghcr.io/${{ github.repository }}
  IMAGE_NAME: ${{ github.repository }}:latest

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Cache node packages
        uses: actions/cache@v2
        with:
          key: node-cache
          path: |
            ./frontend/src/main/webapp/node
            ./frontend/src/main/webapp/node_modules
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: 'maven'
      - name: Execute maven build
        run: ./mvnw clean install -DskipTests
      - uses: actions/upload-artifact@v2
        with:
          name: admin-jarfile
          path: ./backend/target/admin-backend.jar

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Cache node packages
        uses: actions/cache@v2
        with:
          key: node-cache
          path: |
            ./frontend/src/main/webapp/node
            ./frontend/src/main/webapp/node_modules
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: 'maven'
      - name: Run tests
        run: echo "TODO test TODO" # ./mvnw test

  lint-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          curl -sSLO https://github.com/pinterest/ktlint/releases/download/0.43.2/ktlint && chmod a+x ktlint && sudo mv ktlint /usr/local/bin/
      - name: run ktlint
        run: |
          ktlint --reporter=plain
        continue-on-error: false

  lint-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Cache node packages
        uses: actions/cache@v2
        with:
          key: node-cache
          path: |
            ./frontend/src/main/webapp/node
            ./frontend/src/main/webapp/node_modules
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version-file: 'frontend/src/main/webapp/.nvmrc'
          cache: 'npm'
          cache-dependency-path: 'frontend/src/main/webapp'
      - run: npm install
        working-directory: frontend/src/main/webapp
      - run: npm run lint
        working-directory: frontend/src/main/webapp

  publish-docker-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    needs: [ build, test ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: admin-jarfile
          path: ./artifact
      - name: Log in to the container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: _build/Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}

# TODO lint kotlin?, lint angular, e2e-test
