name: Build and Test

on:
  workflow_call:
    inputs:
      java-version:
        required: true
        type: string
      java-distribution:
        required: true
        type: string
      ktlint-version:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Cache node packages
        uses: actions/cache@v2
        with:
          key: node-cache
          path: |
            ./frontend/src/main/webapp/node
            ./frontend/src/main/webapp/node_modules
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}
          cache: 'maven'
      - name: Execute maven build
        run: ./mvnw clean install -DskipTests
      - uses: actions/upload-artifact@v2
        with:
          name: admin-jarfile
          path: ./backend/target/admin-backend.jar

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Cache node packages
        uses: actions/cache@v2
        with:
          key: node-cache
          path: |
            ./frontend/src/main/webapp/node
            ./frontend/src/main/webapp/node_modules
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}
          cache: 'maven'
      - name: Run tests
        run: echo "TODO test TODO" # ./mvnw test

  lint-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          curl -sSLO https://github.com/pinterest/ktlint/releases/download/${{ inputs.ktlint-version}}/ktlint && chmod a+x ktlint && sudo mv ktlint /usr/local/bin/
      - name: run ktlint
        run: |
          ktlint --reporter=plain?group_by_file --disabled_rules=no-wildcard-imports, no-blank-line-before-rbrace, indent, filename
        continue-on-error: true

  lint-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Cache node packages
        uses: actions/cache@v2
        with:
          key: node-cache
          path: |
            ./frontend/src/main/webapp/node
            ./frontend/src/main/webapp/node_modules
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version-file: 'frontend/src/main/webapp/.nvmrc'
          cache: 'npm'
          cache-dependency-path: 'frontend/src/main/webapp'
      - run: npm install
        working-directory: frontend/src/main/webapp
      - run: npm run lint
        working-directory: frontend/src/main/webapp
        continue-on-error: true

# TODO e2e-test, tslint
